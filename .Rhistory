q <- c(prueba,amigo,sofa)
q <- c("prueba","amigo","sofa")
new_variable <- c(1,2,3)
new_variable*1
new_variable*3
new_variable+5
?rnd
?r
?all
prueba <- c(1,2,3,NA)
all(prueba=="NA")
logico=(prueba=="NA")
logico
logico <- is.na(prueba)
logico
all(logico)
logico <- NA
logico <- FALSE
logico2 <- TRUE
all(logico,logico2)
all(logico)
all(logico2)
?read.csv2
?source
?read.csv2
?matrix
curves = matrix(
c("Sub_metering_1", "black",
"Sub_metering_2", "red",
"Sub_metering_3", "blue"),
3, byrow=TRUE
)
curves
?strptime
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
?splom
?trellis.par.set
?splom
?print.trellis
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
str(airquality)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
?pairs
?reformulate
setwd("~/Dropbox/Personal/Coursera")
setwd("~/Dropbox/Personal/Coursera/Data Science/5. Reproducible Research/Assignment 1")
data <- read.csv("activity.csv")
data$date <- as.Date(data$date)
library(plyr)
library(dplyr)
final_data <- filter(data,steps!="NA")
head(final_data)
resumen <- summarise(group_by(final_data,date),total=sum(steps))
mean_steps <- round(mean(as.numeric(unlist(resumen[,2]))),2)
median_steps <- round(median(as.numeric(unlist(resumen[,2]))),2)
with(resumen,plot(date,total,type="h",main="Total steps by date",
xlab="Date",
ylab="Number of steps"))
dev.copy(png,file"./figure/Total steps by date")
cd("./figure")
pwd()
setwd("./figure")
dev.copy(png,file"Total steps by date")
setwd(..)
setwd("~/Dropbox/Personal/Coursera/Data Science/5. Reproducible Research/Assignment 1")
dev.copy(png,file="Total steps by date")
dev.off
dev.off()
dev.copy(png,file="./figure/Total steps by date")
dev.off()
five_minute_interval <- summarise(group_by(final_data,interval),total=mean(steps))
with(five_minute_interval,plot(interval,total,type="l",main="Average Daily Pattern",
xlab="5 Minute Interval",
ylab="Average number of steps"))
dev.copy(png,file="./figure/Average daily pattern")
dev.off()
total <- nrow(data[is.na(data$steps),])
print(total)
resumen <- summarise(group_by(final_data,interval),mean_steps=mean(steps))
for(i in 1:nrow(data)){
if(is.na(data[i,1])){
intervalo <- data[i,3]
data[i,1] <- filter(resumen,interval==intervalo)[1,2]
}
}
head(data)
resumen <- summarise(group_by(data,date),total=sum(steps))
mean_steps_complete <- round(mean(as.numeric(unlist(resumen[,2]))),2)
median_steps_complete <- round(median(as.numeric(unlist(resumen[,2]))),2)
with(resumen,plot(date,total,type="h",main="Total number of steps per day",
xlab="Date",
ylab="Number of steps"))
dev.copy(png,file="./figure/Total number of steps per day")
dev.off()
data <- mutate(data,day=weekdays(data$date,abbreviate=TRUE),weekday=0)
dias <- c("Mon","Tue","Wed","Thu","Fri")
for(i in 1:nrow(data)){
if (sum(dias==data[i,4])!=0){
data[i,5] <- "Week"
}else{
data[i,5] <- "Weekend"
}
}
data <- data[,c(1,2,3,5)]
head(data)
library(lattice)
data <- transform(data,weekday=factor(weekday))
resumen <- summarise(group_by(data,weekday,interval),mean_steps=mean(steps))
resumen <- transform(resumen,weekday=factor(weekday))
xyplot(mean_steps~interval|weekday,data=resumen,type="l",
xlab="5 minute interval",
ylab="Mean of steps")
dev.copy(png,file="./figure/Week and weekend difference")
dev.off()
